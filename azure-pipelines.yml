trigger:
  branches:
    include: 
    - master
variables:
  buildConfiguration: 'Release'
  location: 'West US 2'
  acrHostName: 'APITest001acr.azurecr.io'
  acrName: 'APITest001acr'
  rgName: 'APITest001-rg'
  imageName: 'APITest001'
  webAppName: 'APITest001'

stages:

# Build Stage
- stage: BuildAndTest
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:

    # Create or update the ACR resource
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Azure Container Registry'
      inputs:
        azureSubscription: 'AzureSC'
        resourceGroupName: '$(rgName)'
        location: $(location)
        csmFile: '$(System.DefaultWorkingDirectory)/**/containerRegistry-template.json'
        overrideParameters: '-registryName "$(acrName)" -registryLocation "$(location)" -registrySku standard'

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 2.2.x
        installationPath: $(Agent.ToolsDirectory)/dotnet        
  
    # Restore dependencies
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore
        projects: '**/*.csproj'

    # Build Test Framework
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'


    # Publish the test Framework
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(System.DefaultWorkingDirectory)/PublishedWebApp'
        zipAfterPublish: false

    # Build container image
    - task: Docker@1
      displayName: 'Build container image'
      inputs:
        azureSubscriptionEndpoint: 'AzureSC'
        azureContainerRegistry: '$(acrHostName)'
        imageName: '$(imageName):$(Build.BuildId)'
        useDefaultContext: false
        buildContext: '$(System.DefaultWorkingDirectory)/PublishedWebApp'

    # Push container image
    - task: Docker@1
      displayName: 'Push container image'
      inputs:
        azureSubscriptionEndpoint: 'AzureSC'
        azureContainerRegistry: '$(acrHostName)'
        command: 'Push an image'
        imageName: '$(imageName):$(Build.BuildId)'

    # Copy ARM templates
    - task: CopyFiles@2
      displayName: 'Copy ARM templates'
      inputs:
        SourceFolder: ArmTemplates
        TargetFolder: '$(build.artifactstagingdirectory)'

    # Publish the app as an artifact
    - publish: $(Build.StagingDirectory)
      artifact: app

# Staging Testing
- stage: Test
  jobs:
  - job: API Test
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
    # Don't clone the repo
    - checkout: none

    # Download the published application artifact
    - download: current
      artifact: app
      
    # Run API tests
    - task: DotNetCoreCLI@2
      displayName: API Tests
      inputs:
        command: test
        projects: '**/*UnitTests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'